
06 跨服务调用: 使用 RestTemplate 发出http请求 
  @MapperScan("com.")
  @SpringBootApplication
  public class OrderApplication{
    public static void main(String[] args){
       SpringApplication.run(OrderApplication.class, args);
    }

   @Bean
   @LoadBalanced //10 eureka 负载均衡
   public RestTemplate restTemlate(){
      return new RestTemplate();
   }  
  }

  @Service
  public class OrderService{
   @Autowired
   private RestTemplate restTemplate;

  06// User user = restTemplate.getForObject(http://8081/user/, retrunObj.class);
   User user = restTemplate.getForObject("http://userservice/user", retrunObj.class); //10 使用eureka
  }

09 EurekaServer ： server side
  1.dependency: spring-cloud-start-netflix-eureka-server
  2.@EnableEurekaServer
  3.application.yml ( server/port:xxx  
                      spring/application/name:eurekaserver              //Eureka服务名称
                      eureka/client/service-url/defaultZone: http://    //Eureka服务地址
  
  2.@EnableEurekaServer
  @EnableEurekaServer
  @SpringBootApplication
  public class EurekaApplication{
   public static void main(String[] args){
    springApplication.run(EurekaApplication.class, args);
   }
  }
 
10 server register :client side
   在需要使用Eureka的服务
   1.dependency: spring-cloud-start-netflix-eureka-client
   2.yml: spring/application/name: userservice    
          eureka/client/service-url/defaultZone: http://

11.1. @LoadBalance
   2. 把url 的 端口改为 userservice

12 Ribbon : 找Eureka 要serviceList， 根据 iRule 选server
       ladBalancerInterceptor - RibbonLoadBanlancerClient - DynameicServerListLoadBalancer 

13 IRule : 
    zoneAvoidanceRule : 默认
    RandomRule: 某个服务的 application.yml: userservice:/ ribbon:/ NFLoadBalancerRuleClassName　：　com.netflix.loadbalancer.RandomRule
    eager: userservice:/ ribbon:/ eager-load:/ enabled: true/ clients : -需要开启饥饿load的服务
 
 
 
 
