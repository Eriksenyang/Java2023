
163: SpringCloud :
   OpenFeign(远程调用), Eureka(Nacos)注册, Ribbon负载, Gateway(zuul), Sentinel(Hystrix)服务保护, SpringClouldCOnfig/Nacos(服务配置管理)
  
164:  Nacos 注册表结构
    Namespace : 环境隔离 
    Group : 分组
    Service : 服务
    Cluster ： 集群
    Instance： 实例

165 Nacos源码
   protocol Buffer: 协议

167 Nacos支持10万注册压力
    把注册任务放入队列, thread pool asynch异步处理

168 避免并发读写冲突
    copyOnWrite复制1份, 更新复制的列表, 再用这个列表覆盖原列表

169               API                     实例               健康检测                        服务发现
    Eureka   Rest API(注册/发现)         临时实例                心跳                         定时pull
    nacos :  Rest API(注册/发现)    临时实例 & 永久实例  临时实例(心跳)&永久实例(主动)        定时pull & push
 
170
 
171 Sentinel vs Hystix thread isolation
     Hystix: 基于thread pool. 每个服务有自己的thread pool. 客户request通过 自己线程池建的thread call FeignClient去访问服务. 保证隔离及防止一个服务down占用所以的thread
             优点： 控制性强, 异步调用             缺点：create a lot threads
     Sentinel: set max thread, 用计数器控制.
                优点： 低开销,            缺点：控制性弱, 不支持异步

172 Sentinel VS Gateway
   
























           
