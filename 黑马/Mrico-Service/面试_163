
163: SpringCloud :
   OpenFeign(远程调用), Eureka(Nacos)注册, Ribbon负载, Gateway(zuul), Sentinel(Hystrix)服务保护, SpringClouldCOnfig/Nacos(服务配置管理)
  
164:  Nacos 注册表结构
    Namespace : 环境隔离 
    Group : 分组
    Service : 服务
    Cluster ： 集群
    Instance： 实例

165 Nacos源码
   protocol Buffer: 协议

167 Nacos支持10万注册压力
    把注册任务放入队列, thread pool asynch异步处理

168 避免并发读写冲突
    copyOnWrite复制1份, 更新复制的列表, 再用这个列表覆盖原列表

169               API                     实例               健康检测                        服务发现
    Eureka   Rest API(注册/发现)         临时实例                心跳                         定时pull
    nacos :  Rest API(注册/发现)    临时实例 & 永久实例  临时实例(心跳)&永久实例(主动)        定时pull & push
 
170
 
171 Sentinel vs Hystix thread isolation
     Hystix: 基于thread pool. 每个服务有自己的thread pool. 客户request通过 自己线程池建的thread call FeignClient去访问服务. 保证隔离及防止一个服务down占用所以的thread
             优点： 控制性强, 异步调用             缺点：create a lot threads
     Sentinel: set max thread, 用计数器控制.
                优点： 低开销,            缺点：控制性弱, 不支持异步

172 Sentinel VS Gateway
   Sentinel: 通过计数器来, 限流(只给固定量的线程)， 隔离(只给固定量的线程)， 降级&熔断
    1.processorSlotChain

173 Process

174 Sentinel Entry

175 Sentinel Context

176 Sentinel API
    AbstractSentinelInterceptor       @SentinelResource("resource")
      resourceName
      contextName
      origin
      init Context
       *EntranceNode
       *Context
      init Entry
  
 177 NodeSelectSlot & ClusterBuilderSlot
 
 178 StatisticSlot(统计)
 
 179 AuthoritySlot 
 
 180 SystemSLot : 负载
 
 181 ParamFlowSlot : 热点限流
 
 182 flowSlot: 限流
      流量控制： 直接 / 关联 / 链路(从某个链路来的)
      流控效果： fail-fast(到阈值就fail)/ warm-up(阈值波动: 小->大) / queue(先入Q)
  
 183 FlowSlot: 预期等待时长=上一个预期等待时长 + 间隔时间
 
 184 DegradeSlot : 降级
      close(正常运行时DegradeSlot关闭) -超过阈值->   open(DegradeSlot拦截所有)   -时间(可设定5s)->  half-Optn(尝试进行1次) - 失败就进入 open
                                                                                                                       - 成功就进入 close
                                                                                                                       
                                                                                                                       
























           
