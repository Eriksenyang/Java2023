p90 springBoot
    @RestController
    @RequestMapping("/books")
    public class BookContoller{
      
      @GetMapping("${id}")
      public String getById(@PathVariable Integer id){ sop }
    }

p91 pom
    @SpringBootApplication
    public class Application{
      public static void main(String[] args){ SpringApplication.run(Application.class, args)}
    }
p92 mavne package
    java -jar xxx.jar
    <build>
      <plugins>
          <plugin>
            <groupId>
             <artifactId>spring-boot-maven-plugin</artifactId>
             
p93 spring-boot-starter-parent

p94 jetty

p94 setting : 加入项目，出提示 file/projctStruct/facets/+spring
    1.application.properties 
        server.port=80
    2.application.yml
        server:
          port: 80

p97 读取 yml  lesson: springboot
   1. 用@Value(${lesson})
        @RestController
        @RequestMapping("/books")
        public class BookContoller{
          @Value(${lesson})
          private String lesson;

          @GetMapping("${id}")
          public String getById(@PathVariable Integer id){ sop }
        }
    2.@Autowired
      private Environment environment;

    3.定义1个 Enterprise pojo class: 比如生成一个class 读取 DB的配置
      @Component
      @COnfigurationProperties(prefix="lesson") //读取yml 中 lesson
      public class lesson{ }
     
p98 springboot 多环境开发 application.yml
      spring:
        profiles:
          active: dev
     ---
      spring:
        profiles: dev
      server:
        port: 80   
      ---  
      spring:
        profiles: test
       server:
        port: 81      
      ---  

p99 java -jar xxx.jar --spring.profiles.active=test --server.port=88 //test 环境 , port 88

p100 多环境开发 MVN 为主pom.xml,   springboot的application.yml为辅
       1.pom.xml
            <profiles>
                 <profile>
                    <id>env_dev</id>
                    <properties>
                       <profile.active>dev</> //dev环境                      
                     </properties>
                     <activation>
                       <activeByDefault>true</activeByDefault> //激活
                     <activation>
                 <profile>
                    <id>env_test/id>
                    <properties>
                       <profile.active>test</> ////tst 环境     

       2.  application.yml
             spring:
                profiles:
                  active: ${profile.active} //从 pom

       3. 让 yml  读到 pom  profile.active的值
              <plugin>
                <groupId>
                <artifactId>maven-resource-plugin<>
                <version></>
                 <configuration>
                   <useDefaultDelimiters>true</>

p101 配置文件
        
    
p102 Junit
    @SpringBootTest
    class SpirngTest{
        @Autowired
        private BookService bookService;
        @Test
    }

p103 Mybits
        1.mybatis-spring-boot-start
        2.
        3. public class Book(){}
        4.
          @Mapper                        //这里让spring 生成proxy 
          public interface BookDao(){
            @Select("select * from tb1_user where id= #{id}")
            public Book getById(Integer id);
           }
        5.application.yml
            spring:
                datasource:
                    drive-class-name: com.mysql
                    url:  jdbc:mysql:// ?serverTimezone=UTC
                    username: root
                    password: root
                    type: com.alibaba.druid.pool.DruidDataSource
                    

p104 页面相关的 css,js, pages 放在 resource/static 下                  
        
















