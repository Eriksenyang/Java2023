p21 注解开发
  1. 注解 @Component("name")/ @Controller @Service @Repository
  2. 配置文件扫描bean ： application.xml  <comtext:component-scan base-package="bean的包">
 
p22 用config class 替代 pom.xml    
    1.@Configuration
      @ComponentScan("包")//扫包
      public class SpringConfig{     }
    2.main 使用
      AnnotationConfigApplicationContext(springConfig.class);

p23 lifeCycle
    @Scope("prototype") //作用范围
    public class AImpl implment A{
      @PostConstruct //init
      
      @PreDestroy //destroy
    }
  
p24 
  1.引用类型注入
      @Autowired
      @Qualifier()//指定bean   
  2. 简单类型注入
      @Value(“值”)
      private String name;  
  3. 加载proprety的值
      1.jdbc.properties
         key=""
      2.在Config class中配置 property source
        @Configuration
        @ComponentScan(“包”)
        @PropertySource("jdbc.properties")
        public class SpringConfig{ }
       3.使用
          @Value(${"key"})
          private String name;
      
 p25     
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
