p75 多模块

p76 
   1.单独开发一个moduleA 
   2. run maven install : 安装到仓库
   3.在moduleB 的pom中加入 moduleA(pom中<groupId><artifactId>)的依赖,  moduleB 就能用 moduleA 
   
p77 dependency manage
    1. 1个依赖如果有不同版本, 后配置的生效. (后覆盖前)
    2.路径优先

p78  1.隐藏自己的依赖
       <version></>
       <optional>true<> //隐藏
     2.排除别人的依赖
        <exclusions>
          <exclusion>

p79 对项目同时构建,保证1个模块跟新,项目同时更新构建.
      1.建立一个parent模块 打包成pom, 没有其他功能 
          <groupId>
          <artifactId>
          <version>
          <packaging>pom<packaging> //父模块管理所以子模块, 打包成pom
       2. 父模块管理所以子模块
           <modules>
              <module>../maven_02_ssm<module> 
              <module>../maven_03_pojo<module> 
              ...
              
p80 继承
    1.在子module中继承父 pom 
      <parent>
         <groupId>
         <artifactId>
         <version>
         //<relativePath>../maven_01_parent/pom.xml<> //继承父的 pom 
     
    2. 父pom配上通用的依赖
    
    3.1 对于可选用的依赖在父 pom中配 <dependencyManagement>
          <dependencyManagement>
            <dependencies>
               <dependency>
                  <groupId>
                  <artifactId>
                  <version> //统一管理version 
    3.2 当需要这个依赖的子 pom, 不需要配 <version>  , 父统一管理version   
         <dependency>
                  <groupId>
                  <artifactId>
         <dependency>
       
  p81 变量
     1.定义
        <propreties>
          <sprign.varsion>5.1.10</sprign.varsion>
      2.使用
            <groupId>
            <artifactId>
            <version>${sprign.varsion}</version>
            
   p82  resouce 文件使用 pom中的属性
       1.pom 设定属性
         propreties>
          <jdbc.url>jdbc:mysql://..</sprign.varsion>
       2.在resource中引用属性
         jdbc.url=${jdbc.url}
       3.在父 pom 开启加载 resource的 filter
          <build>
            <resources>
               <resource>
                  <directory>${project.basedir}/src/main/resources</> //resources目录下所有properties 文件
                  <filtering>true<filtering>
       
       3.maven如果需要打war包，skip war包报错
         <plugin>
             <groupId>
             <artifactId>maven-war-plugin<>
             <version>
             <configuration>
               <failOnMissingWebXml>false</>
       
  p83 SNAPSHOT
  
  p84
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
