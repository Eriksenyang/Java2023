1. Collections : 常用接口, 实现
  https://github.com/Eriksenyang/2020Self/blob/master/%E9%BB%91%E9%A9%AC/Java%E9%9D%A2%E8%AF%95/ArrayList
  
  非线程安全 : ArrayList, LL, HashSet, HashMap, TreeMap
  线程安全 :
  HashTable vs ConcurrentHashMap https://github.com/Eriksenyang/2020Self/edit/master/%E9%BB%91%E9%A9%AC/Java%E9%9D%A2%E8%AF%95/HashTable%20vs%20ConcurrentHashMap
   
2.Exception : https://www.bilibili.com/video/BV1uJ411k7wy?p=300&spm_id_from=pageDriver
  Throwable (void printStackTrace(), String getMessage(), String toString() )
            : error
            : exception : runtimeException  : jvm creat obj(内容，位置), if try{}carch, 给caller处理, 顶层jvm 打印异常, 中断程序
                            eg NullPointerException, ArrayIndexOutOfBoundsException
                        : compilertime Exception
                            eg FileNotFoundException
                            
       finally{}                     
  springBoot 统一处理 ： https://www.bilibili.com/video/BV1924y1o7Sm/?spm_id_from=333.337.search-card.all.click
    
    public enum AppExceptionCodeMsg{ //枚举
      //统一 和业务相关
      INVALI_ID_CODE(1000, "无效ID");
    }
    
    public class AppException extends RuntimeException {//自定义的异常
      private in code = "500";
      private String msg = "service error";
      public AppException(AppExceptionCodeMsg appExceptionCodeMsg){
        supper();
        this.code = appExceptionCodeMsg.getCode();
        this.msg = appExceptionCodeMsg.getMsg();
      }
      get/set
    }
    
    public class Resp<T>{ //统一返回值的class
      private int code = "200";
      private String msg = "success";
      private T data;
      
      priavte Resp( int code, String msg, T data){
        this.code = code;
        this.msg = msg;
        this.data = data;
      }
      public static <T>Resp success(T data){
        return resp = new Resp(200, success, data);
      }
      public static <T>Resp success(String msg, T data){
        return resp = new Resp(200, msg, data);
      }
      public static <T>Resp error(AppExceptionCodeMsg appExCodeMsg){
        return resp = new Resp(appExCodeMsg.getCode(), appExCodeMsg.getMsg(), null);
      }
      public static <T>Resp error(AppExceptionCodeMsg appEx){
        return resp = new Resp(code, msg, null);
      }
       get/set
    }  
    
    @ControllerAdvice  //
    public class GlobleExeHandler{ //统一拦截error的类
      @ExceptionHandler(value = {Exception.class}) //
      @ResponseBody
      public <T> Resp<T> exceptionHandler(Exception e){
        if(e instanceof AppException){ // 是否是自定义的异常
          AppException appEx = (AppException)e;
          return Resp.error(appEx.getCode(), appEx.getMsg()); // call  统一返回值的class
        }
      }
      return Resp.error(500, "service error"); //不是自定义的异常
    }
    
3. Object 常用方法
   toString : obj string formate : path @ hashcode
   clone: 重写 cloneable
   finalized : GC 调用   JVM--------------

4. java 1.8 
   https://blog.csdn.net/ss810540895/article/details/123691862

    
    
                           
