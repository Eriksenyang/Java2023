https://www.youtube.com/watch?v=LynFxUh2wbo&t=182s

public int[] mergeSort(int[] nums){
  return divide(nums, 0, nums.length - 1);
}

private int[] divide(int[] nums, int l, int r){
  if(l >= r) return new int[] {nums[l]}; //边界条件， 
  int mid = l + (r - l)/2;
  int[] leftR = divide(nums, l, mid);
  int[] rightR = divide(nums, mid + 1, r);
  retrun merge(leftR, rightR);
}

private int[] merge(int[] left, int[] right){
  int[] res = new int[left.length + right.length]; //答案 array
  int i = 0, j = 0, k = 0;
  while(i < left.length && j < right.length){ //取left, right中小的 进入 res
    if(left[i] <= right[j]){
      res[k] = left[i++];
    }else{
      res[k] = right[j++];
    }
  }
  i < left.length ? res[k++] = nums[i++] : res[k++] = nums[j++];  
  
}
