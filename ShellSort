https://www.youtube.com/watch?v=ddt4Dzi2LqM&t=1582s
/*
* shelesort:一个for loop 以gap为区间滑动指针来处理这2个元素， 全部处理一次后 gap/2(gap减半) 再loop 一直到gap =1 
* 这2个元素使用insertinonSort
*/
 public void shellSort(int[] nums){
  int len = nums.length;
  for(int gap = len/2; gap > 0; gap/2){//比如8个数，gap为4 比较以gap(4)为长度的窗口(0,3/1,4)，下一次loop： gap/2=2, 比较以gap(2)为长度的窗口,最后比较gap为1
    for(int i = gap; i < len; ++i) {// 例如 8个数，gap为4：比较N[0], N[3].  下一个循环 ++i=5: 比较N[1], N[4], i[gap - len-1]
      int tmp = nums[i];            
      int j = i;
      while(nums[j - gap] > tmp){//while: 比较以gap(4)为长度的窗口的2个数: (j-gap): 比较N[0], N[3]
        nums[j] = nums[j - gap];
        j -= gap;                //以gap为长度比较： 0 , 3
      }
    }
    nums[j] = tmp;
 }
}
  
